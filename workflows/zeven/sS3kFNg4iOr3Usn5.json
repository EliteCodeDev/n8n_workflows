{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Global Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "page_2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Combinar por iniciar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "page_1": {
      "main": [
        [
          {
            "node": "Challenges por iniciar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "page_2": {
      "main": [
        [
          {
            "node": "page_1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Global Constants": {
      "main": [
        [
          {
            "node": "page_1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Challenges por iniciar": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combinar por iniciar": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verificamos estadisticas": {
      "main": [
        [
          {
            "node": "Realizó trades?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "verificamos estadisticas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Realizó trades?": {
      "main": [
        [
          {
            "node": "Tiene Metadata previa?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Armar metadata": {
      "main": [
        [
          {
            "node": "Iniciar Challenge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Parámetros": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Relation1": {
      "main": [
        [
          {
            "node": "Obtener Parámetros",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Escoger Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Construir data": {
      "main": [
        [
          {
            "node": "Escoger Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tiene Metadata previa?": {
      "main": [
        [
          {
            "node": "Construir data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Obtener Relation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escoger Data": {
      "main": [
        [
          {
            "node": "Armar metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-26T16:57:12.827Z",
  "id": "sS3kFNg4iOr3Usn5",
  "isArchived": false,
  "meta": null,
  "name": "APP: Tracker 1er Trade",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2580,
        20
      ],
      "id": "b009e050-1de1-40e3-ae30-19632e76f77c",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "915bbcec-f6a7-4fce-9704-165d884a9f05",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1380,
        20
      ],
      "id": "b6acc302-1e3c-4336-be72-7a446efd3f26",
      "name": "If2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0b888805-fc15-4169-bd0f-22b0d6011781",
              "name": "page",
              "value": "={{ $json.page || 1}}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2040,
        20
      ],
      "id": "d7c8edd6-b5da-4a1a-badb-b96b1d063e8c",
      "name": "page_1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1632edcb-f8a0-438b-8196-ef006011535a",
              "name": "page",
              "value": "={{ $json.meta.pagination.page + 1}}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1520,
        200
      ],
      "id": "3390e035-8850-4519-887c-6d0598183064",
      "name": "page_2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-globals.globalConstants",
      "typeVersion": 1,
      "position": [
        -2340,
        20
      ],
      "id": "31d0a458-b001-46fd-8040-02ca0e0bad59",
      "name": "Global Constants",
      "credentials": {
        "globalConstantsApi": {
          "id": "xD5yrF0WiFvNSDFv",
          "name": "Global Constants account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.STRAPI_URL }}/challenges?populate=*&filters[result][$eq]=init&filters[isactive][$eq]=true",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagination[page]",
              "value": "={{ $json.page }}"
            },
            {
              "name": "pagination[pageSize]",
              "value": "25"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1760,
        20
      ],
      "id": "add567a1-9f18-41b7-8a8f-aff53a01bfe2",
      "name": "Challenges por iniciar",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const allData = [];\nlet counter = 0;\ndo {\n  try {\n    // Obtener los items del nodo de n8n\n    const items = $(\"Challenges por iniciar\").all(0, counter);\n    \n    // Si no hay items, salir del bucle\n    if (!items || items.length === 0) {\n      break;\n    }\n    \n    // Extraer los datos del array 'data' dentro de json de cada item\n    const extractedData = items.map(item => item.json.data).flat();\n    \n    // Agregar los datos extraídos al array final\n    allData.push.apply(allData, extractedData);\n  } catch (error) {\n    // Devolver los datos recolectados hasta ahora\n    return ({\"data\":allData});\n  }\n  counter++;\n} while(true);\n\nreturn ({\"data\":allData});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1160,
        40
      ],
      "id": "986d8b5c-7176-4b89-a93d-72f2cbc13b5a",
      "name": "Combinar por iniciar"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -940,
        40
      ],
      "id": "125a46c1-913a-42f2-a5e8-4dd06de0ce29",
      "name": "Split Out"
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.WEBAPP_URL }}api/meta-stats/{{ $json.broker_account.idMeta }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -500,
        40
      ],
      "id": "3cc1dba8-10aa-432c-bc9b-58b1dec87b0d",
      "name": "verificamos estadisticas",
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "8u20dlP7ndo4urwE",
          "name": "META API TOKEN ZEVEN"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e979c464-627c-4c07-89da-6a2173a46298",
              "leftValue": "={{ $json.broker_account.idMeta }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -720,
        40
      ],
      "id": "fadf36e2-366c-4b8f-92bb-77af88e04cb7",
      "name": "Filter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "074c2b42-dd28-4451-887c-7cbce59df996",
              "leftValue": "={{$json.metrics.trades }}",
              "rightValue": "=0",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -280,
        40
      ],
      "id": "2197060b-f7cc-405d-9e9b-9ff35b205799",
      "name": "Realizó trades?"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenges/{{ $('Split Out').item.json.documentId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"data\": {\n    \"startDate\": \"{{ new Date().toISOString() }}\",\n    \"result\": \"progress\",\n    \"metadata\": {{ JSON.stringify($('Armar metadata').item.json.data) || {} }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        0
      ],
      "id": "f1154e0e-37b5-4cd6-94cf-6bc195c77288",
      "name": "Iniciar Challenge",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"metaId\":\"{{ $('verificamos estadisticas').item.json.metaId }}\",\n    \"metrics\":{{ JSON.stringify($('verificamos estadisticas').item.json.metrics) }},\n    \"equityChart\":{{ JSON.stringify($('verificamos estadisticas').item.json.equityChart) }},\n    \"broker_account\":{{ JSON.stringify($('Split Out').item.json.broker_account)}},\n    \"challenge_stages\":{{ JSON.stringify($('Escoger Data').item.json.data.challenge_stages) }},\n    \"stage_parameters\":{{ JSON.stringify($('Escoger Data').item.json.data.stage_parameters) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        0
      ],
      "id": "a76c5e5a-f1a0-4c62-ae2c-c27a0dd49bcc",
      "name": "Armar metadata"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5c618a39-d156-4e30-9093-8f08fe4aeda9",
              "leftValue": "={{ $('Split Out').item.json.metadata }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        140,
        -20
      ],
      "id": "b2256130-aa5f-4a2e-90c8-d712d2f27cb1",
      "name": "Tiene Metadata previa?"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"metaId\":\"{{ $('verificamos estadisticas').item.json.metaId }}\",\n    \"metrics\":{{ JSON.stringify($('verificamos estadisticas').item.json.metrics) }},\n    \"equityChart\":{{ JSON.stringify($('verificamos estadisticas').item.json.equityChart) }},\n    \"broker_account\":{{ JSON.stringify($('Split Out').item.json.broker_account)}},\n    \"challenge_stages\":{{ JSON.stringify($('Obtener Relation1').item.json.data.challenge_stages) }},\n    \"stage_parameters\":{{ JSON.stringify($json.data) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        80
      ],
      "id": "a24e6f92-8647-4fdb-807a-c3faf5d75f79",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/stage-parameters?populate=*&filters[challenge_relation][id]={{ $('Split Out').item.json.challenge_relation.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        620,
        80
      ],
      "id": "4116bcab-9124-40da-9d3f-a0de716e817a",
      "name": "Obtener Parámetros",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Global Constants').item.json.constants.API_INTERNAL_URL }}/challenge-relations/{{ $('Split Out').item.json.challenge_relation.documentId }}?populate=challenge_stages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiTokenApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        400,
        80
      ],
      "id": "87f36354-2085-4884-9560-2e84dcfab6f8",
      "name": "Obtener Relation1",
      "credentials": {
        "strapiTokenApi": {
          "id": "fdl2l1uCV5LNbN3K",
          "name": "Strapi Token account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {\n    \"metaId\":\"{{ $('verificamos estadisticas').item.json.metaId }}\",\n    \"metrics\":{{ JSON.stringify($('verificamos estadisticas').item.json.metrics) }},\n    \"equityChart\":{{ JSON.stringify($('verificamos estadisticas').item.json.equityChart) }},\n    \"broker_account\":{{ JSON.stringify($('Split Out').item.json.broker_account)}},\n    \"challenge_stages\":{{ JSON.stringify($('Split Out').item.json.metadata.challenge_stages) }},\n    \"stage_parameters\":{{ JSON.stringify($('Split Out').item.json.metadata.stage_parameters) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        -120
      ],
      "id": "f294a0f6-9b91-47a2-a6d3-c2e53576b121",
      "name": "Construir data"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let data;\n\ntry {\n  // Intentamos leer del nodo \"Actualizar Broker account\"\n  const id1 = $('Construir data').item.json.data;\n  // Si existe, guardamos esos datos\n  if (id1) {\n    data = id1;\n  }\n} catch (error) {\n  // Si falla, significa que no se ejecutó o no tenía esos datos\n  // Podemos dejarlo pasar o hacer un console.log(error)\n}\n\ntry {\n  // Intentamos leer del nodo \"Obtener Broker Account\"\n  const id2 = $('Edit Fields').item.json.data;\n  // Si existe, guardamos esos datos\n  if (id2) {\n    data = id2;\n  }\n} catch (error) {\n  // Igualmente, si falla, es porque no se ejecutó.\n}\n\n// Al final devolvemos lo que hayamos encontrado\nreturn { data };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1140,
        0
      ],
      "id": "ff9dd507-984d-4ee5-9bcb-3041437e4a32",
      "name": "Escoger Data"
    }
  ],
  "pinData": {},
  "repo_name": "n8n_workflows",
  "repo_owner": "EliteCodeDev",
  "repo_path": "workflows/zeven/",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "psoEwVAjpwuKHyK1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-26T17:07:14.000Z",
  "versionId": "25576eb4-6704-43f2-a0ab-74182e895624"
}